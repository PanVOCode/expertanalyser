import requests
import json
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'config'))
from aiconfig import (
    DEEPSEEK_API_KEY, DEEPSEEK_BASE_URL, DEEPSEEK_MODEL,
    DEFAULT_MAX_TOKENS, DEFAULT_TEMPERATURE, DEFAULT_SYSTEM_PROMPT,
    REQUEST_TIMEOUT
)

def test_deepseek_api():
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è DeepSeek API —á–µ—Ä–µ–∑ OpenRouter
    """
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DeepSeek API —á–µ—Ä–µ–∑ OpenRouter...")
    print(f"API Key: {DEEPSEEK_API_KEY[:10]}..." if DEEPSEEK_API_KEY else "API Key –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print(f"Base URL: {DEEPSEEK_BASE_URL}")
    print(f"Model: {DEEPSEEK_MODEL}")
    
    if not DEEPSEEK_API_KEY:
        print("‚ùå –û—à–∏–±–∫–∞: API –∫–ª—é—á –Ω–µ —É–∫–∞–∑–∞–Ω –≤ aiconfig.py")
        return False
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    test_message = "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è API
    messages = []
    
    if DEFAULT_SYSTEM_PROMPT:
        messages.append({
            "role": "system",
            "content": "–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."
        })
    
    messages.append({
        "role": "user",
        "content": test_message
    })
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    payload = {
        "model": DEEPSEEK_MODEL,
        "messages": messages,
        "max_tokens": 100,  # –£–º–µ–Ω—å—à–∞–µ–º –¥–ª—è —Ç–µ—Å—Ç–∞
        "temperature": 0.7,
        "stream": False
    }
    
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
        "HTTP-Referer": "https://github.com/your-repo",  # OpenRouter —Ç—Ä–µ–±—É–µ—Ç HTTP-Referer
        "X-Title": "Telegram Channel Analyzer",  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è OpenRouter
        "User-Agent": "Telegram-Channel-Analyzer/1.0",  # –î–æ–±–∞–≤–ª—è–µ–º User-Agent
        "Accept": "application/json"  # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º Accept
    }
    
    try:
        print(f"\n–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ {DEEPSEEK_BASE_URL}/v1/chat/completions")
        print(f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {test_message}")
        
        response = requests.post(
            f"{DEEPSEEK_BASE_URL}/v1/chat/completions",
            headers=headers,
            json=payload,
            timeout=REQUEST_TIMEOUT
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            ai_response = result.get("choices", [{}])[0].get("message", {}).get("content", "")
            
            if ai_response:
                print(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: {ai_response}")
                return True
            else:
                print("‚ùå –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç AI")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
        return False
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {str(e)}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return False

if __name__ == "__main__":
    success = test_deepseek_api()
    if success:
        print("\nüéâ API DeepSeek —á–µ—Ä–µ–∑ OpenRouter —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\nüí• API DeepSeek —á–µ—Ä–µ–∑ OpenRouter –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ aiconfig.py") 