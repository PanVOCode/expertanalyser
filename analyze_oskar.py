#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
from analyse import analyse
from ai import ask_ai
import re
import json

def analyze_oskar_channel():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞–Ω–∞–ª –û—Å–∫–∞—Ä–∞ –•–∞—Ä—Ç–º–∞–Ω–Ω–∞"""
    
    channel_url = "https://t.me/Oskar_Hartmann"
    
    print("="*60)
    print("–ê–ù–ê–õ–ò–ó –ö–ê–ù–ê–õ–ê: –û—Å–∫–∞—Ä –•–∞—Ä—Ç–º–∞–Ω–Ω")
    print("="*60)
    
    try:
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç—ã —Ç–æ–ø-5 –ø–æ—Å—Ç–æ–≤
        print("üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª–∞...")
        top_posts_text = analyse(channel_url)
        
        if top_posts_text:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(top_posts_text.split('—Ç–µ–∫—Å—Ç')) - 1} –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            print("\n" + "="*50)
            print("–¢–û–ü-5 –ü–û–°–¢–û–í –ü–û –í–ò–†–ê–õ–¨–ù–û–°–¢–ò:")
            print("="*50)
            print(top_posts_text)
            
            # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç—ã –≤ AI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π
            print("\nü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ —á–µ—Ä–µ–∑ AI...")
            ai_analysis = ask_ai(top_posts_text)
            
            # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç –æ—Ç AI
            expert = "unknown"
            competencies = []
            
            try:
                # –ò—â–µ–º JSON –≤ –æ—Ç–≤–µ—Ç–µ AI
                json_match = re.search(r'\{.*\}', ai_analysis, re.DOTALL)
                if json_match:
                    json_str = json_match.group(0)
                    ai_data = json.loads(json_str)
                    
                    expert = str(ai_data.get('—ç–∫—Å–ø–µ—Ä—Ç', 'unknown')).lower()
                    competencies = ai_data.get('–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏', [])
                    
                    if isinstance(competencies, list):
                        competencies = ', '.join(competencies)
                    else:
                        competencies = str(competencies)
                else:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ AI: {ai_analysis}")
                    competencies = ai_analysis
                    
            except json.JSONDecodeError as e:
                print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
                print(f"–û—Ç–≤–µ—Ç AI: {ai_analysis}")
                competencies = ai_analysis
            
            print("\n" + "="*50)
            print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ AI –ê–ù–ê–õ–ò–ó–ê:")
            print("="*50)
            print(f"–≠–∫—Å–ø–µ—Ä—Ç: {expert}")
            print(f"–ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏: {competencies}")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–∞–Ω–∞–ª–∞: {e}")

if __name__ == "__main__":
    analyze_oskar_channel() 